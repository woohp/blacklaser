let e;e=!1,self.addEventListener("install",()=>{self.skipWaiting()}),self.addEventListener("fetch",t=>{let s=(t=>{let{url:s}=t.request;return s.includes(self.registration.scope+"webtorrent/")?s.includes(self.registration.scope+"webtorrent/keepalive/")?new Response:s.includes(self.registration.scope+"webtorrent/cancel/")?new Response(new ReadableStream({cancel(){e=!0}})):async function({request:t}){let{url:s,method:n,headers:l,destination:a}=t,o=await clients.matchAll({type:"window",includeUncontrolled:!0}),[r,i]=await new Promise(e=>{for(let t of o){let{port1:o,port2:r}=new MessageChannel;o.onmessage=({data:t})=>{e([t,o])},t.postMessage({url:s,method:n,headers:Object.fromEntries(l.entries()),scope:self.registration.scope,destination:a,type:"webtorrent"},[r])}}),c=null,d=()=>{i.postMessage(!1),clearTimeout(c),i.onmessage=null};return"STREAM"!==r.body?(d(),new Response(r.body,r)):new Response(new ReadableStream({pull:t=>new Promise(s=>{i.onmessage=({data:e})=>{e?t.enqueue(e):(d(),t.close()),s()},e||(clearTimeout(c),"document"!==a&&(c=setTimeout(()=>{d(),s()},5e3))),i.postMessage(!0)}),cancel(){d()}}),r)}(t):null})(t);s&&t.respondWith(s)}),self.addEventListener("activate",()=>{self.clients.claim()});